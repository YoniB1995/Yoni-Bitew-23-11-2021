{"version":3,"sources":["components/features/header/Backdrop.js","redux/themeSlicer.js","components/features/header/Header.js","components/features/header/SideDrawer.js","components/features/card/FavoritesCard.js","redux/favoritesSlice.js","components/pages/Favorites.js","services/weatherApi.js","redux/citySlicer.js","redux/weekSlice.js","services/mockCityApi.js","components/features/card/DailyWeather.js","components/features/card/CityCard.js","components/pages/Weather.js","components/routes/AppRouter.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["Backdrop","show","click","BackdropBody","onClick","styled","div","themeSlicer","createSlice","name","initialState","theme","background","color","bg","text","reducers","changeTheme","state","action","backToDefault","actions","Header","dispatch","useDispatch","useState","isTheme","setIsTheme","value","setValue","HeaderBody","HeaderLeft","src","alt","className","style","fontSize","display","flexDirection","justifyContent","alignItems","class","type","HeaderRight","ToggleButtonGroup","onChange","val","to","ToggleButton","id","textDecoration","HamburgerMenu","SideDrawer","useSelector","sideDrawerClass","push","join","height","width","BtnNavigate","FavoritesCard","city","desc","celsius","cityKey","navigate","useNavigate","getTheme","CardBody","Card","Body","Title","Text","Math","floor","Metric","Value","Unit","Button","variant","Footer","favoriteItems","localStorage","getItem","JSON","parse","favoriteWeather","favoriteSlicer","addToFavorites","favoriteList","payload","toast","success","LocalizedName","position","setItem","stringify","addWeatherLocationKey","removeFromFavorites","map","favorite","_id","nextFavoriteItems","filter","item","error","clearFavorites","Favorites","list","favorites","FavoritesBody","FavoritesBox","List","i","WeatherText","Key","Temperature","apiKey","process","baseUrl","fiveDaysForcast","getAutoComplete","a","query","fetch","then","res","json","fetchAuto","getCurrentLocation","lat","lon","myLocation","getCurrentWeather","locationKey","addToFavoritesByKey","getCityByLocationKey","createAsyncThunk","data","citySlicer","cityDetails","currentCondition","isLoading","getCityDetails","getCurrentCondition","extraReducers","pending","fulfilled","rejected","addToFavorite","getDailyForecast","DailyForecasts","weekSlicer","dailyForecast","converted","status","daysWeek","DailyWeather","temp","currentDay","isConverted","convertedWeather","round","toFixed","Img","CityCard","getCity","Imperial","border","Weather","cityParams","useParams","getFiveDays","setText","useEffect","catch","console","log","setFavor","favor","details","weatherDetails","setWeatherDetails","convert","setConvert","suggestions","setSuggestions","onSuggestHandler","onChangeHandler","e","searchInput","target","matches","length","getMyLocation","successCallback","coords","latitude","longitude","errorCallback","navigator","geolocation","getCurrentPosition","LoadingPageBody","WeatherPageBody","FormControl","marginLeft","suggestion","OptionsList","WeatherBox","WeatherBoxTop","marginRight","WeatherBoxCenter","WeatherBoxBottom","day","Minimum","Day","IconPhrase","AppRouter","sideToggle","setSideToggle","exact","path","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","weekSlice","favoritesSlicer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e19881a4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Backdrop = ({ show, click }) => {\r\n  return show && <BackdropBody onClick={click}></BackdropBody>;\r\n};\r\n\r\nexport default Backdrop;\r\n\r\nconst BackdropBody = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 100;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    theme : {background:\"#f4f4f4\",color:\"black\"},\r\n    bg : \"white\",\r\n    text : \"dark\"\r\n}\r\n\r\n\r\nconst themeSlicer = createSlice({\r\n    name:\"theme\",\r\n    initialState,\r\n    reducers:{\r\n         changeTheme(state,action){\r\n            state.theme = {background:\"#141414\",color:\"white\"};\r\n            state.bg =\"dark\";\r\n            state.text=\"white\";\r\n            },\r\n        backToDefault(state,action){\r\n            state.theme = {background:\"#f4f4f4\",color:\"black\"};\r\n            state.bg = \"white\";\r\n            state.text = \"dark\";\r\n            },\r\n        \r\n        }}    \r\n  );\r\n\r\nexport const { changeTheme,backToDefault} =\r\n  themeSlicer.actions;\r\n\r\nexport default themeSlicer.reducer;","import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\r\nimport ToggleButton from 'react-bootstrap/ToggleButton'\r\nimport './Header.css'\r\nimport { changeTheme ,backToDefault} from \"../../../redux/themeSlicer\";\r\n\r\n\r\nconst Header = ({click}) => {\r\n    const dispatch = useDispatch();\r\n    const [isTheme,setIsTheme] = useState(false)\r\n   \r\n        const [value, setValue] = useState([1, 2]);\r\n    const handleChange = (val) => setValue(val);\r\n\r\n   const toggleTheme = () => {\r\n        if (!isTheme){\r\n        setIsTheme(true)\r\n        dispatch(changeTheme())\r\n        }\r\n        else {\r\n            setIsTheme(false)\r\n        dispatch(backToDefault()) \r\n        }\r\n   }\r\n    return (\r\n        <HeaderBody>\r\n            <HeaderLeft><img src=\"./images/abraLogo.jpeg\" alt=\"Abra Company Logo\" />\r\n            <p className=\"header-task\">Weather Task </p> <img src=\"./images/rainy-1.svg\" alt=\"Kiwi standing on oval\"/>\r\n            <p className=\"toggle\" style={{fontSize:\"1rem\",display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\"}}>Change Theme\r\n                <label class=\"switch\" >\r\n                    <input type=\"checkbox\"/>\r\n                    <span class=\"slider round\" onClick={toggleTheme}></span>\r\n                </label>\r\n            </p> </HeaderLeft>\r\n            <HeaderRight> <ToggleButtonGroup type=\"checkbox\" value={value} onChange={handleChange}>\r\n      <Link to=\"/\"><ToggleButton id=\"tbg-btn-1\" value={1} style={{fontSize:\"1.5rem\",color:\"white\",background:\"#141414\",textDecoration:\"none\"}}>\r\n        Home</ToggleButton>\r\n        </Link>\r\n      <Link to=\"/favorites\"><ToggleButton id=\"tbg-btn-2\" value={2} style={{fontSize:\"1.5rem\",color:\"white\",background:\"#141414\"}}>\r\n        Favorites</ToggleButton>\r\n        </Link>\r\n      \r\n    </ToggleButtonGroup></HeaderRight>\r\n    \r\n    <HamburgerMenu onClick={click}>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </HamburgerMenu>\r\n        </HeaderBody>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n\r\nconst HeaderBody = styled.div`\r\ndisplay:flex;\r\nwidth:100%;\r\njustify-content:space-between;\r\nflex-direction:row;\r\nborder-bottom: 1px solid black;\r\nbox-shadow:2px 1px 1px 0px;\r\nheight:20vh;\r\npadding:1rem;\r\nfont-size:2rem;\r\n@media (max-width: 750px) {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    img {\r\n     display:none\r\n    }\r\n    .toggle{\r\n        display:none;\r\n    }\r\n    .header-task{\r\n        display:none\r\n    }\r\n  }\r\n`\r\nconst HeaderLeft = styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\nflex-direction:row;\r\njustify-content:center;\r\n\r\nimg {\r\n    height:100%;\r\n}\r\np{\r\n    padding-left:1rem;\r\n}\r\n\r\n@media (max-width: 750px) {\r\n    \r\n    display:none\r\n    \r\n  }\r\n\r\n`\r\n\r\nconst HeaderRight = styled.div`\r\ndisplay:flex;\r\nflex-direction:row;\r\nalign-items:center;\r\n@media (max-width: 750px) {\r\n    display:none;\r\n  }\r\n`\r\n\r\n\r\nconst HamburgerMenu = styled.div`\r\n  width: 30px;\r\n  height: 30px;\r\n  display: none;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  div {\r\n    width: 100%;\r\n    height: 3px;\r\n    background: blue;\r\n  }\r\n\r\n  @media (max-width: 750px) {\r\n    display: flex;\r\n    margin-top: 30px;\r\n  }\r\n`;","import React, { useState } from \"react\";\r\nimport \"./SideDrawer.css\";\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\r\nimport ToggleButton from 'react-bootstrap/ToggleButton'\r\nimport {Link} from 'react-router-dom'\r\nimport './Header.css'\r\nimport { changeTheme ,backToDefault} from \"../../../redux/themeSlicer\";\r\n\r\n\r\n\r\nconst SideDrawer = ({ show, click }) => {\r\n    const getTheme = useSelector((state) => state.theme);\r\n  const {theme} = getTheme;\r\n  const sideDrawerClass = [\"sidedrawer\"];\r\n  show && sideDrawerClass.push(\"show\");\r\n  const dispatch = useDispatch();\r\n    const [isTheme,setIsTheme] = useState(false)\r\n   \r\n        const [value, setValue] = useState([1, 2]);\r\n    const handleChange = (val) => setValue(val);\r\n\r\n   const toggleTheme = () => {\r\n        if (!isTheme){\r\n        setIsTheme(true)\r\n        dispatch(changeTheme())\r\n        }\r\n        else {\r\n            setIsTheme(false)\r\n        dispatch(backToDefault()) \r\n        }\r\n   }\r\n  return (\r\n    <div className={sideDrawerClass.join(\" \")} style={theme}>\r\n        <span><p >Weather Task </p> <img src=\"./images/rainy-1.svg\" alt=\"Kiwi standing on oval\" height=\"100px\" width=\"100px\"/></span>\r\n        <img src=\"./images/abraLogo.jpeg\" alt=\"Abra Company Logo\" />\r\n      <p style={{fontSize:\"1rem\",display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\"}}>Change Theme\r\n                <label class=\"switch\" >\r\n                    <input type=\"checkbox\"/>\r\n                    <span class=\"slider round\" onClick={toggleTheme}></span>\r\n                </label>\r\n            </p>\r\n            <BtnNavigate>\r\n        <ToggleButtonGroup type=\"checkbox\" value={value} onChange={handleChange}>\r\n      <Link to=\"/\"><ToggleButton id=\"tbg-btn-1\" value={1} style={{fontSize:\"1.5rem\",color:\"white\",background:\"#141414\",textDecoration:\"none\"}}>\r\n        Home</ToggleButton>\r\n        </Link>\r\n      <Link to=\"/favorites\"><ToggleButton id=\"tbg-btn-2\" value={2} style={{fontSize:\"1.5rem\",color:\"white\",background:\"#141414\"}}>\r\n        Favorites</ToggleButton>\r\n        </Link>\r\n    </ToggleButtonGroup></BtnNavigate>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n\r\n\r\nconst BtnNavigate = styled.div` \r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content:center;\r\nalign-items:center;\r\n`","import React from 'react'\r\nimport {useNavigate } from 'react-router-dom'\r\nimport Button from 'react-bootstrap/Button'\r\nimport styled from 'styled-components'\r\nimport Card from 'react-bootstrap/Card'\r\nimport {useSelector} from 'react-redux'\r\nconst FavoritesCard = ({city,desc,celsius,cityKey}) => {\r\n  const navigate = useNavigate ();\r\n  \r\n  const getTheme = useSelector((state) => state.theme);\r\n  const { bg,text } = getTheme;\r\n    return (\r\n        <CardBody>\r\n        <Card bg={bg} text={text}>\r\n    <i class=\"fas fa-star\" style={{color:\"gold\"}}></i>\r\n    <Card.Body>\r\n      <Card.Title>{city}</Card.Title>\r\n      <Card.Text>\r\n        {Math.floor(celsius.Metric.Value)}°{celsius.Metric.Unit}\r\n      </Card.Text>\r\n      <Card.Text>\r\n        <Button variant=\"primary\" onClick={()=> navigate(`/${cityKey}`)}>Get Details</Button>\r\n      </Card.Text>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <small className=\"text-muted\">{desc}</small>\r\n    </Card.Footer>\r\n  </Card>\r\n  </CardBody>\r\n    )\r\n}\r\n\r\nexport default FavoritesCard\r\n\r\n\r\nconst CardBody = styled.div` \r\ndisplay:flex;\r\nmargin:1rem;\r\ncolor:black;\r\n`\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {toast} from \"react-toastify\";\r\n\r\n\r\nconst initialState = {\r\n    favoriteItems:localStorage.getItem(\"favoriteItems\") ? JSON.parse(localStorage.getItem(\"favoriteItems\")): [],\r\n    favoriteWeather:[],\r\n}\r\n\r\n\r\nconst favoriteSlicer = createSlice({\r\n    name:\"favoritesItems\",\r\n    initialState,\r\n    reducers:{\r\n        addToFavorites(state,action){\r\n\r\n                const favoriteList = {...action.payload}\r\n            state.favoriteItems.push(favoriteList);\r\n            toast.success(`added ${action.payload.LocalizedName} to favorites `,{\r\n                    position: \"bottom-left\",\r\n                })\r\n            localStorage.setItem(\"favoriteItems\",JSON.stringify(state.favoriteItems));\r\n\r\n        },\r\n         addWeatherLocationKey(state,action){\r\n                \r\n            state.favoriteWeather.push({...action.payload});\r\n        },\r\n    removeFromFavorites(state, action) {\r\n      state.favoriteItems.map((favorite) => {\r\n        if (favorite._id === action.payload._id) {\r\n          const nextFavoriteItems = state.favoriteItems.filter(\r\n            (item) => item._id !== favorite._id\r\n          );\r\n\r\n          state.favoriteItems = nextFavoriteItems;\r\n          state.favoriteWeather= nextFavoriteItems;\r\n          toast.error(`${action.payload.LocalizedName} removed from favorites`, {\r\n            position: \"bottom-left\",\r\n          });\r\n        }\r\n        localStorage.setItem(\"favoriteItems\", JSON.stringify(state.favoriteItems));\r\n        return state;\r\n      });\r\n    },\r\n    clearFavorites(state, action) {\r\n      state.favoriteItems = [];\r\n      state.favoriteWeather= [];\r\n      localStorage.setItem(\"favoriteItems\", JSON.stringify(state.favoriteItems));\r\n      toast.success(\"Favorites cleared\", { position: \"bottom-left\" });\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addToFavorites, removeFromFavorites, clearFavorites,addWeatherLocationKey } =\r\n  favoriteSlicer.actions;\r\n\r\nexport default favoriteSlicer.reducer;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport FavoritesCard from '../features/card/FavoritesCard'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {clearFavorites} from \"../../redux/favoritesSlice\";\r\n\r\nconst Favorites = () => {\r\n  const dispatch = useDispatch();\r\n  const list = useSelector((state) => state.favorites);\r\n  const {favoriteWeather , favoriteItems} = list;\r\n\r\n  const handleClearFavorites = () => {\r\n    dispatch(clearFavorites());\r\n  };\r\n\r\n  \r\n    return (\r\n        \r\n        <FavoritesBody className=\"animate__animated animate__fadeInUp\">\r\n            <FavoritesBox>\r\n            <h2>Favorites</h2>\r\n            <List>\r\n            {favoriteWeather?.map((item,i)=>\r\n            <FavoritesCard key={i} city={favoriteItems[i].LocalizedName} desc={favoriteWeather[i][\"0\"].WeatherText} cityKey={favoriteItems[i].Key} \r\n            celsius={favoriteWeather[i][\"0\"].Temperature}\r\n            />\r\n            )}</List>\r\n            <Button onClick={handleClearFavorites} variant=\"danger\">Clear Favorites</Button>\r\n            </FavoritesBox>\r\n        </FavoritesBody>\r\n        \r\n    )\r\n}\r\n\r\nexport default Favorites\r\n\r\n\r\nconst FavoritesBody = styled.div` \r\nbackground: url('https://images.pexels.com/photos/1162251/pexels-photo-1162251.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260') no-repeat center / cover;\r\n  color: #fff;\r\nheight:100vh;\r\nwidth:100%;\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content:center;\r\nalign-items:center;\r\n`\r\n\r\nconst FavoritesBox = styled.div` \r\nborder:1px solid black;\r\nopacity:7;\r\nborder-radius:15px;\r\nheight:80%;\r\nwidth:80%;\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content:flex-start;\r\nalign-items:center;\r\n`\r\nconst List = styled.div` \r\ndisplay:flex;\r\nflex-direction:row;\r\n`","export const apiKey = process.env.REACT_APP_WEATHER_API_KEY\r\n\r\n\r\nexport const baseUrl = \"http://dataservice.accuweather.com/currentconditions/v1/\" //current weather\r\nexport const SearchByLocationKey = \"http://dataservice.accuweather.com/locations/v1/\"\r\nexport const fiveDaysForcast = \"http://dataservice.accuweather.com/forecasts/v1/daily/5day/\"\r\nexport const autoComplete = \"http://dataservice.accuweather.com/locations/v1/cities/autocomplete\"\r\nexport const currentLocation = \"http://dataservice.accuweather.com/locations/v1/cities/geoposition/search\"\r\n\r\nexport const getAutoComplete = async (city) => {\r\n        const query = `?apikey=${apiKey}&q=${city}`\r\n\r\n        const fetchAuto =  await fetch(`${autoComplete}${query}`)\r\n        .then((res) => res.json())\r\n\r\n        return fetchAuto;\r\n        \r\n    }\r\n\r\nexport const getDaysForecast = async (locationApi) => {\r\n        const query = `${locationApi}?apikey=${apiKey}`\r\n\r\n        const fetchDays =  await fetch(`${fiveDaysForcast}${query}`)\r\n        .then((res) => res.json())\r\n\r\n        return fetchDays;\r\n        \r\n    }\r\n\r\nexport const getCurrentLocation = async (lat,lon) => {\r\n    const query = `?apikey=${apiKey}&q=${lat}%2C${lon}`;\r\n\r\n    const myLocation = await fetch(`${currentLocation}${query}`)\r\n    .then((res) => res.json())\r\n\r\n    return myLocation;\r\n}\r\n\r\nexport const getCurrentWeather = async (locationKey) => {\r\n    return await fetch(`${baseUrl}${locationKey}?apikey=${apiKey}`).then((res)=> res.json());\r\n}\r\n\r\nexport const addToFavoritesByKey =  async (locationKey) => {\r\n    return await fetch(`${baseUrl}${locationKey}?apikey=${apiKey}`).then((res)=> res.json())\r\n};\r\n","import { createSlice , createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport {SearchByLocationKey,apiKey} from '../services/weatherApi'\r\n\r\nexport const getCityByLocationKey = createAsyncThunk('city/getCityLocation', async (locationKey) => {\r\n    return await fetch(`${SearchByLocationKey}${locationKey}?apikey=${apiKey}`).then((res)=> res.json()).then(data=> data)\r\n});\r\n\r\n\r\nconst initialState = {\r\n    cityDetails : {},\r\n    currentCondition:[],\r\n    isLoading:null\r\n}\r\n\r\n\r\nconst citySlicer = createSlice({\r\n    name:\"cityDetails\",\r\n    initialState,\r\n    reducers:{\r\n        getCityDetails(state,action){\r\n            state.cityDetails = action.payload\r\n            },\r\n        getCurrentCondition(state,{payload}){\r\n            state.currentCondition = {...payload};\r\n        },\r\n        } ,\r\n    extraReducers:{\r\n        [getCityByLocationKey.pending] : (state, action) => {\r\n            state.isLoading = 'loading'\r\n        },\r\n        [getCityByLocationKey.fulfilled] : (state, {payload}) => {\r\n            state.cityDetails = payload\r\n            state.isLoading = 'success'\r\n        },\r\n        [getCityByLocationKey.rejected] : (state, action) => {\r\n            state.isLoading = 'failed'\r\n        },\r\n\r\n    }\r\n    });\r\n\r\nexport const { getCityDetails,addToFavorite,getCurrentCondition} =\r\n  citySlicer.actions;\r\n\r\nexport default citySlicer.reducer;","import { createSlice , createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport {fiveDaysForcast,apiKey} from '../services/weatherApi'\r\n\r\nexport const getDailyForecast = createAsyncThunk('weather/getDailyForecast', async (locationKey) => {\r\n    return await fetch(`${fiveDaysForcast}${locationKey}?apikey=${apiKey}`).then((res)=> res.json()).then((data) => data.DailyForecasts)\r\n});\r\n\r\nconst initialState = {\r\n    dailyForecast:[],\r\n    converted: [],\r\n    status: null,\r\n}\r\n\r\nconst weekSlicer = createSlice({\r\n    name:\"dailyForecast\",\r\n    initialState,\r\n    extraReducers:{\r\n        [getDailyForecast.pending] : (state, action) => {\r\n            state.status = 'loading'\r\n        },\r\n        [getDailyForecast.fulfilled] : (state, {payload}) => {\r\n            state.dailyForecast = payload\r\n            state.status = 'success'\r\n        },\r\n        [getDailyForecast.rejected] : (state, action) => {\r\n            state.status = 'failed'\r\n        },\r\n\r\n    },\r\n})\r\n\r\n\r\nexport default weekSlicer.reducer;","export const telAviv = {\r\n  \"Version\": 1,\r\n  \"Key\": \"215854\",\r\n  \"Type\": \"City\",\r\n  \"Rank\": 31,\r\n  \"LocalizedName\": \"Tel Aviv\",\r\n  \"EnglishName\": \"Tel Aviv\",\r\n  \"PrimaryPostalCode\": \"\",\r\n  \"Region\": {\r\n    \"ID\": \"MEA\",\r\n    \"LocalizedName\": \"Middle East\",\r\n    \"EnglishName\": \"Middle East\"\r\n  },\r\n  \"Country\": {\r\n    \"ID\": \"IL\",\r\n    \"LocalizedName\": \"Israel\",\r\n    \"EnglishName\": \"Israel\"\r\n  },\r\n  \"AdministrativeArea\": {\r\n    \"ID\": \"TA\",\r\n    \"LocalizedName\": \"Tel Aviv\",\r\n    \"EnglishName\": \"Tel Aviv\",\r\n    \"Level\": 1,\r\n    \"LocalizedType\": \"District\",\r\n    \"EnglishType\": \"District\",\r\n    \"CountryID\": \"IL\"\r\n  },\r\n  \"TimeZone\": {\r\n    \"Code\": \"IST\",\r\n    \"Name\": \"Asia/Jerusalem\",\r\n    \"GmtOffset\": 2,\r\n    \"IsDaylightSaving\": false,\r\n    \"NextOffsetChange\": \"2022-03-25T00:00:00Z\"\r\n  },\r\n  \"GeoPosition\": {\r\n    \"Latitude\": 32.045,\r\n    \"Longitude\": 34.77,\r\n    \"Elevation\": {\r\n      \"Metric\": {\r\n        \"Value\": 34,\r\n        \"Unit\": \"m\",\r\n        \"UnitType\": 5\r\n      },\r\n      \"Imperial\": {\r\n        \"Value\": 111,\r\n        \"Unit\": \"ft\",\r\n        \"UnitType\": 0\r\n      }\r\n    }\r\n  },\r\n  \"IsAlias\": false,\r\n  \"SupplementalAdminAreas\": [],\r\n  \"DataSets\": [\r\n    \"AirQualityCurrentConditions\",\r\n    \"AirQualityForecasts\",\r\n    \"Alerts\",\r\n    \"DailyPollenForecast\",\r\n    \"ForecastConfidence\"\r\n  ]\r\n}\r\n\r\nexport const telAvivCurrentCondition = {\r\n    \"LocalObservationDateTime\": \"2021-11-24T17:46:00+02:00\",\r\n    \"EpochTime\": 1637768760,\r\n    \"WeatherText\": \"Partly cloudy\",\r\n    \"WeatherIcon\": 35,\r\n    \"HasPrecipitation\": false,\r\n    \"PrecipitationType\": null,\r\n    \"IsDayTime\": false,\r\n    \"Temperature\": {\r\n      \"Metric\": {\r\n        \"Value\": 21.6,\r\n        \"Unit\": \"C\",\r\n        \"UnitType\": 17\r\n      },\r\n      \"Imperial\": {\r\n        \"Value\": 71,\r\n        \"Unit\": \"F\",\r\n        \"UnitType\": 18\r\n      }\r\n    },\r\n    \"MobileLink\": \"http://www.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\",\r\n    \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\"\r\n  }\r\n\r\nexport const telAvivForecast = {\r\n    \"DailyForecasts\": [\r\n    {\r\n      \"Date\": \"2021-11-24T07:00:00+02:00\",\r\n      \"EpochDate\": 1637730000,\r\n      \"Temperature\": {\r\n        \"Minimum\": {\r\n          \"Value\": 59,\r\n          \"Unit\": \"F\",\r\n          \"UnitType\": 18\r\n        },\r\n        \"Maximum\": {\r\n          \"Value\": 75,\r\n          \"Unit\": \"F\",\r\n          \"UnitType\": 18\r\n        }\r\n      },\r\n      \"Day\": {\r\n        \"Icon\": 4,\r\n        \"IconPhrase\": \"Intermittent clouds\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Night\": {\r\n        \"Icon\": 36,\r\n        \"IconPhrase\": \"Intermittent clouds\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Sources\": [\r\n        \"AccuWeather\"\r\n      ],\r\n      \"MobileLink\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&lang=en-us\",\r\n      \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&lang=en-us\"\r\n    },\r\n    {\r\n      \"Date\": \"2021-11-25T07:00:00+02:00\",\r\n      \"EpochDate\": 1637816400,\r\n      \"Temperature\": {\r\n        \"Minimum\": {\r\n          \"Value\": 60,\r\n          \"Unit\": \"F\",\r\n          \"UnitType\": 18\r\n        },\r\n        \"Maximum\": {\r\n          \"Value\": 72,\r\n          \"Unit\": \"F\",\r\n          \"UnitType\": 18\r\n        }\r\n      },\r\n      \"Day\": {\r\n        \"Icon\": 2,\r\n        \"IconPhrase\": \"Mostly sunny\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Night\": {\r\n        \"Icon\": 34,\r\n        \"IconPhrase\": \"Mostly clear\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Sources\": [\r\n        \"AccuWeather\"\r\n      ],\r\n      \"MobileLink\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=2&lang=en-us\",\r\n      \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=2&lang=en-us\"\r\n    },\r\n    {\r\n      \"Date\": \"2021-11-26T07:00:00+02:00\",\r\n      \"EpochDate\": 1637902800,\r\n      \"Temperature\": {\r\n        \"Minimum\": {\r\n          \"Value\": 61,\r\n          \"Unit\": \"F\",\r\n          \"UnitType\": 18\r\n        },\r\n        \"Maximum\": {\r\n          \"Value\": 74,\r\n          \"Unit\": \"F\",\r\n          \"UnitType\": 18\r\n        }\r\n      },\r\n      \"Day\": {\r\n        \"Icon\": 1,\r\n        \"IconPhrase\": \"Sunny\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Night\": {\r\n        \"Icon\": 33,\r\n        \"IconPhrase\": \"Clear\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Sources\": [\r\n        \"AccuWeather\"\r\n      ],\r\n      \"MobileLink\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=3&lang=en-us\",\r\n      \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=3&lang=en-us\"\r\n    },\r\n    {\r\n      \"Date\": \"2021-11-27T07:00:00+02:00\",\r\n      \"EpochDate\": 1637989200,\r\n      \"Temperature\": {\r\n        \"Minimum\": {\r\n          \"Value\": 66,\r\n          \"Unit\": \"F\",\r\n          \"UnitType\": 18\r\n        },\r\n        \"Maximum\": {\r\n          \"Value\": 77,\r\n          \"Unit\": \"F\",\r\n          \"UnitType\": 18\r\n        }\r\n      },\r\n      \"Day\": {\r\n        \"Icon\": 1,\r\n        \"IconPhrase\": \"Sunny\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Night\": {\r\n        \"Icon\": 34,\r\n        \"IconPhrase\": \"Mostly clear\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Sources\": [\r\n        \"AccuWeather\"\r\n      ],\r\n      \"MobileLink\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=4&lang=en-us\",\r\n      \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=4&lang=en-us\"\r\n    },\r\n    {\r\n      \"Date\": \"2021-11-28T07:00:00+02:00\",\r\n      \"EpochDate\": 1638075600,\r\n      \"Temperature\": {\r\n        \"Minimum\": {\r\n          \"Value\": 69,\r\n          \"Unit\": \"F\",\r\n          \"UnitType\": 18\r\n        },\r\n        \"Maximum\": {\r\n          \"Value\": 78,\r\n          \"Unit\": \"F\",\r\n          \"UnitType\": 18\r\n        }\r\n      },\r\n      \"Day\": {\r\n        \"Icon\": 4,\r\n        \"IconPhrase\": \"Intermittent clouds\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Night\": {\r\n        \"Icon\": 34,\r\n        \"IconPhrase\": \"Mostly clear\",\r\n        \"HasPrecipitation\": false\r\n      },\r\n      \"Sources\": [\r\n        \"AccuWeather\"\r\n      ],\r\n      \"MobileLink\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=5&lang=en-us\",\r\n      \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=5&lang=en-us\"\r\n    }\r\n  ]\r\n}\r\n\r\nexport const daysWeek = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\"]\r\n\r\nexport const currentLocation = {\r\n  \"Version\": 1,\r\n  \"Key\": \"212479\",\r\n  \"Type\": \"City\",\r\n  \"Rank\": 65,\r\n  \"LocalizedName\": \"Gedera\",\r\n  \"EnglishName\": \"Gedera\",\r\n  \"PrimaryPostalCode\": \"\",\r\n  \"Region\": {\r\n    \"ID\": \"MEA\",\r\n    \"LocalizedName\": \"Middle East\",\r\n    \"EnglishName\": \"Middle East\"\r\n  },\r\n  \"Country\": {\r\n    \"ID\": \"IL\",\r\n    \"LocalizedName\": \"Israel\",\r\n    \"EnglishName\": \"Israel\"\r\n  },\r\n  \"AdministrativeArea\": {\r\n    \"ID\": \"M\",\r\n    \"LocalizedName\": \"Central District\",\r\n    \"EnglishName\": \"Central District\",\r\n    \"Level\": 1,\r\n    \"LocalizedType\": \"District\",\r\n    \"EnglishType\": \"District\",\r\n    \"CountryID\": \"IL\"\r\n  },\r\n  \"TimeZone\": {\r\n    \"Code\": \"IST\",\r\n    \"Name\": \"Asia/Jerusalem\",\r\n    \"GmtOffset\": 2,\r\n    \"IsDaylightSaving\": false,\r\n    \"NextOffsetChange\": \"2022-03-25T00:00:00Z\"\r\n  },\r\n  \"GeoPosition\": {\r\n    \"Latitude\": 31.816,\r\n    \"Longitude\": 34.781,\r\n    \"Elevation\": {\r\n      \"Metric\": {\r\n        \"Value\": 84,\r\n        \"Unit\": \"m\",\r\n        \"UnitType\": 5\r\n      },\r\n      \"Imperial\": {\r\n        \"Value\": 275,\r\n        \"Unit\": \"ft\",\r\n        \"UnitType\": 0\r\n      }\r\n    }\r\n  },\r\n  \"IsAlias\": false,\r\n  \"SupplementalAdminAreas\": [],\r\n  \"DataSets\": [\r\n    \"AirQualityCurrentConditions\",\r\n    \"AirQualityForecasts\",\r\n    \"Alerts\",\r\n    \"DailyPollenForecast\",\r\n    \"ForecastConfidence\"\r\n  ]\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Card from 'react-bootstrap/Card'\r\nimport {useSelector} from 'react-redux'\r\nconst DailyWeather = ({temp,desc,currentDay,isConverted}) => {\r\n  const getTheme = useSelector((state) => state.theme);\r\n  const { bg,text } = getTheme;\r\n  const {Value , Unit} = temp;\r\n  const convertedWeather = isConverted ? Value +\"°\"+Unit : Math.round(((Value - 32) * 5 / 9).toFixed(2))+\"°C\"\r\n    return (\r\n        <div>\r\n             <CardBody >\r\n        <Card bg={bg} text={text} >\r\n    <Card.Img variant=\"top\" src=\"https://www.accuweather.com/images/weathericons/2.svg\" height=\"100px\" width=\"100px\" />\r\n    <Card.Body>\r\n      <Card.Title>{currentDay}</Card.Title>\r\n      <Card.Text>\r\n        {convertedWeather}\r\n      </Card.Text>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <small className=\"text-muted\">{desc}</small>\r\n    </Card.Footer>\r\n  </Card>\r\n  </CardBody>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DailyWeather\r\n\r\n\r\nconst CardBody = styled.div` \r\ndisplay:flex;\r\ncolor:black;\r\nmargin:1rem;\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Card from 'react-bootstrap/Card'\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst CityCard = ({isConverted}) => {\r\n  const getTheme = useSelector((state) => state.theme);\r\nconst getCity = useSelector((state) => state.city);\r\n    \r\n  const {  cityDetails,currentCondition } = getCity;\r\n  const {Metric,Imperial} = currentCondition[\"0\"].Temperature\r\n  const convertedWeather = !isConverted? Math.floor(Metric.Value) +\"°\" +Metric.Unit : Math.floor(Imperial.Value)+ \"°\" +Imperial.Unit;\r\n    const {bg,text } = getTheme;\r\n    return (\r\n        <div>\r\n        <CardBody className=\"animate__animated animate__fadeInDown\">\r\n        <Card border=\"primary\" bg={bg} text={text} style={{ width: '18rem' }}>\r\n    <Card.Header>{cityDetails.LocalizedName}</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>\r\n      {convertedWeather}\r\n      </Card.Title>\r\n      <Card.Text>\r\n         <small className=\"text-muted\">{currentCondition[\"0\"].WeatherText}</small>\r\n      </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  </CardBody>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CityCard\r\n\r\n\r\nconst CardBody = styled.div` \r\ndisplay:flex;\r\ncolor:black;\r\nmargin:1rem;\r\n`","import React, {useState,useEffect} from 'react'\r\nimport {  useParams,useNavigate } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport styled from 'styled-components'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToFavorites,addWeatherLocationKey,removeFromFavorites } from \"../../redux/favoritesSlice\";\r\nimport { getCityByLocationKey, getCurrentCondition } from \"../../redux/citySlicer\";\r\nimport { getDailyForecast } from \"../../redux/weekSlice\";\r\nimport {daysWeek} from '../../services/mockCityApi'\r\nimport {getAutoComplete, getCurrentLocation,getCurrentWeather,addToFavoritesByKey} from '../../services/weatherApi'\r\nimport DailyWeather from '../features/card/DailyWeather';\r\nimport CityCard from '../features/card/CityCard';\r\n\r\n\r\nconst Weather = () => {\r\n    const navigate = useNavigate ();\r\n    const cityParams = useParams();\r\n    const dispatch = useDispatch();\r\n    const getCity = useSelector((state) => state.city);\r\n    const { cityDetails , currentCondition,isLoading} = getCity;\r\n    const getFiveDays = useSelector((state) => state.dailyForecast);\r\n    const { dailyForecast,status } = getFiveDays;\r\n    const list = useSelector((state) => state.favorites);\r\n    const {favoriteItems} = list;\r\n    const [text,setText] = useState(\"\");\r\n\r\n    useEffect(()=> {\r\n      if(cityParams.id) {\r\n        dispatch(getDailyForecast(cityParams.id))\r\n       dispatch(getCityByLocationKey(cityParams.id))\r\n      getCurrentWeather(cityParams.id).then((data)=> dispatch(getCurrentCondition(data))).catch((error)=> console.log(error))\r\n       favoriteItems.map((favorite)=> favorite.Key === cityParams.id ? setFavor(true) : setFavor(false))\r\n       console.log(favor)\r\n      } \r\n      else {\r\n        favoriteItems.map((favorite)=> favorite.LocalizedName === cityDetails.LocalizedName ? setFavor(true) : setFavor(false))\r\n      }\r\n    },[cityParams.id])\r\n\r\n    \r\n    useEffect(() => {\r\n    if (!cityDetails.LocalizedName){\r\n      getCurrentWeather(\"215854\").then((details)=>dispatch(getCurrentCondition(details))).catch(error=> console.log(error))\r\n       dispatch(getDailyForecast(\"215854\"))\r\n       dispatch(getCityByLocationKey(\"215854\"))\r\n\r\n    }\r\n  }, [!cityDetails.LocalizedName]);\r\n\r\n    const [weatherDetails,setWeatherDetails] = useState([]);\r\n    const [convert,setConvert] = useState(false)\r\n    const [favor,setFavor] = useState(false)\r\n    const [suggestions,setSuggestions] = useState([]);\r\n\r\n    \r\n\r\n    const onSuggestHandler = async (text) => {\r\n        setText(text);\r\n        await getAutoComplete(text).then((data) => setWeatherDetails(data)).catch((error)=> console.log(error))\r\n        setSuggestions([]);\r\n    }\r\n\r\n    const onChangeHandler = async (e) => {\r\n      let searchInput = e.target.value\r\n      let matches = [];\r\n        await getAutoComplete(searchInput).then((data) => \r\n        {  \r\n           if (searchInput.length > 0) {\r\n            matches =  data\r\n        }\r\n        return matches;\r\n        }).catch((error)=> console.log(error))\r\n        \r\n       \r\n        setSuggestions(matches)\r\n        setText(searchInput)\r\n    }\r\n\r\n    const handleAddFavorite = (city) => {\r\n      setFavor(true)\r\n    dispatch(addToFavorites(city));\r\n    addToFavoritesByKey(city.Key).then((data)=> dispatch(addWeatherLocationKey(data))).catch((error)=> console.log(error))    \r\n  };\r\n\r\n  const handleRemoveFavorite = (city) => {\r\n    setFavor(false)\r\n    dispatch(removeFromFavorites(city));\r\n  };\r\n\r\n  const searchCityInput = ( )=> {\r\n    navigate(`/${weatherDetails[0].Key}`)\r\n  }\r\n\r\n  const getMyLocation = async ()=>{\r\n       const successCallback = async (position) => {\r\n        getCurrentLocation(position.coords.latitude,position.coords.longitude)\r\n          .then( function(data) { \r\n            dispatch(getCityByLocationKey(data.Key));\r\n            getCurrentWeather(data.Key).then((details)=>dispatch(getCurrentCondition(details) ))\r\n            dispatch(getDailyForecast(data.Key))\r\n          }).catch((error)=> console.log(error))\r\n  }\r\n\r\n  const errorCallback = (error) => {\r\n    console.log(error)\r\n  };\r\nnavigator.geolocation.getCurrentPosition(successCallback , errorCallback)\r\n  }\r\n\r\n  if (status === \"loading\" || isLoading === \"loading\") {\r\n    return <LoadingPageBody ><h3>Loading...</h3></LoadingPageBody>;\r\n  }\r\n\r\n    return (\r\n        <WeatherPageBody className=\"animate__animated animate__fadeInDown\">\r\n            <h2>Type your destination</h2>\r\n            <span style={{display:\"flex\",flexDirection:\"row\"}}><Button variant=\"primary\" onClick={searchCityInput}><i class=\"fas fa-search\"></i></Button>\r\n            <FormControl aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" onChange={onChangeHandler}\r\n            value={text} />\r\n            <Button variant=\"primary\" style={{marginLeft:\"5px\"}} onClick={getMyLocation}>My Location <i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i></Button>\r\n            \r\n            </span>\r\n            {suggestions && suggestions.map((suggestion,i)=> {\r\n                return <OptionsList key={i} onClick={()=> onSuggestHandler(suggestion.LocalizedName)}>{suggestion.LocalizedName}</OptionsList>\r\n            })}\r\n\r\n\r\n             <WeatherBox >\r\n            <WeatherBoxTop>\r\n                <div>{isLoading === null ? <h2>Loading...</h2> :<CityCard  isConverted={convert} />}</div>\r\n                <div>\r\n                  <Button variant=\"outline-primary\" style={{marginRight:\"5px\"}} onClick={()=>!convert ? setConvert(true) : setConvert(false)}>Convert °C/°F</Button>\r\n                   {favor ? \r\n                   <Button variant=\"outline-danger\" onClick={()=> handleRemoveFavorite(cityDetails)}>Remove from Favorites</Button> :\r\n                   <Button variant=\"outline-success\"  onClick={()=> handleAddFavorite(cityDetails)}>Add to Favorites</Button> }\r\n                </div>\r\n                \r\n            </WeatherBoxTop>\r\n            <WeatherBoxCenter>\r\n                {isLoading === null ? <h3>Loading...</h3> : <h1>{currentCondition[\"0\"].WeatherText} </h1>}\r\n            </WeatherBoxCenter>\r\n           <WeatherBoxBottom>\r\n               {dailyForecast?.map((day,i)=> \r\n               <DailyWeather key={i} temp={day.Temperature.Minimum} desc={day.Day.IconPhrase} isConverted={convert} currentDay={daysWeek[i]}/>\r\n               )}  \r\n            </WeatherBoxBottom>\r\n            </WeatherBox>\r\n        </WeatherPageBody>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n\r\n\r\nconst WeatherPageBody = styled.div` \r\nheight:100%;\r\nbackground: url('https://images.pexels.com/photos/1162251/pexels-photo-1162251.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260') no-repeat center / cover;\r\n  color: #fff;\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content: center;\r\nalign-items:center;\r\n`\r\nconst LoadingPageBody = styled.div` \r\nheight:100vh;\r\nbackground: url('https://images.pexels.com/photos/1162251/pexels-photo-1162251.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260') no-repeat center / cover;\r\n  color: #fff;\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content: center;\r\nalign-items:center;\r\n`\r\n\r\nconst OptionsList = styled.div` \r\ncursor:pointer;\r\nborder: 1px solid black;\r\n:hover{\r\n    background:\"#141414\"\r\n}\r\n`\r\n\r\nconst WeatherBox = styled.div` \r\nopacity:7;\r\nmargin:1rem;\r\npadding:1rem;\r\nborder:1px solid black;\r\nborder-radius:15px;\r\nheight:80%;\r\nwidth:80%;\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content:flex-start;\r\nalign-items:center;\r\n`\r\n\r\nconst WeatherBoxTop = styled.div` \r\ndisplay:flex;\r\njustify-content:space-between;\r\nflex-direction:row;\r\nwidth:100%;\r\n\r\n@media (max-width: 960px) {\r\n    flex-wrap: wrap;\r\n    justify-content:center;\r\n    align-items:center;\r\n  }\r\n`\r\n\r\nconst WeatherBoxCenter = styled.div` \r\ndisplay:flex;\r\njustify-content:center;\r\nalign-items:center;\r\nflex-direction:row;\r\n`\r\nconst WeatherBoxBottom = styled.div` \r\ndisplay:flex;\r\njustify-content:center;\r\nflex-direction:row;\r\nwidth:100%;\r\n@media (max-width: 960px) {\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n`","import React ,{useState} from 'react'\r\nimport { HashRouter as Router , Route , Routes } from 'react-router-dom'\r\nimport Backdrop from '../features/header/Backdrop'\r\nimport Header from '../features/header/Header'\r\nimport SideDrawer from '../features/header/SideDrawer'\r\nimport Favorites from '../pages/Favorites'\r\nimport Weather from '../pages/Weather'\r\n\r\nconst AppRouter = () => {\r\n      const [sideToggle, setSideToggle] = useState(false);\r\n\r\n    return (\r\n        <>\r\n        <Router>\r\n      <SideDrawer show={sideToggle} click={() => setSideToggle(false)} />\r\n      <Backdrop show={sideToggle} click={() => setSideToggle(false)} />\r\n      <Header click={() => setSideToggle(true)} />\r\n   \r\n           \r\n            <Routes>\r\n                <Route exact path=\"/\" element={<Weather/>}></Route> \r\n                <Route exact path=\"/:id\" element={<Weather/>}></Route> \r\n                <Route exact path=\"/favorites\" element={<Favorites/>}></Route> \r\n            </Routes>\r\n        </Router>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport AppRouter from './components/routes/AppRouter';\nimport {useSelector } from \"react-redux\";\n  import { ToastContainer } from 'react-toastify';\n\nfunction App() {\n  const getTheme = useSelector((state) => state.theme);\n\n    const { theme } = getTheme;\n  return (\n    <div className=\"App\" style={theme}>\n     <AppRouter/>\n     <ToastContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport favoritesSlicer from './favoritesSlice'\r\nimport citySlicer from './citySlicer' \r\nimport weekSlice from './weekSlice';\r\nimport themeSlicer from './themeSlicer';\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    city:citySlicer,\r\n    dailyForecast:weekSlice,\r\n   favorites: favoritesSlicer,\r\n   theme:themeSlicer\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {Provider} from 'react-redux'\nimport {store} from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}